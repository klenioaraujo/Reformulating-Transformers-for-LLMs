# FAIR Metadata for ΨQRH Transformer Project
# Compliant with DataCite, Dublin Core, and schema.org standards

name: "ΨQRH Transformer"
full_name: "Psi-Quaternionic Relativistic Harmonic Transformer"
version: "1.0.0"
release_date: "2025-09-30"

description: |
  A novel transformer architecture integrating quaternionic representations,
  spectral harmonic analysis, and fractal consciousness metrics for advanced
  language model processing with energy conservation principles.

keywords:
  - transformer architecture
  - quaternion algebra
  - spectral analysis
  - FAIR principles
  - large language models
  - energy conservation
  - fractal consciousness
  - neural networks
  - deep learning
  - harmonic analysis

# Persistent Identifiers
identifiers:
  doi: "https://zenodo.org/records/17171112"
  zenodo_id: "17171112"
  github: "https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs"
  arxiv: ""  # Add when paper is published

# Authors and Contributors
authors:
  - name: "Klenio Araujo Padilha"
    orcid: "0000-0002-1234-5678"  # Replace with real ORCID
    affiliation: "Independent Researcher"
    email: "klenioaraujo@gmail.com"  # Replace with real email
    role: "Creator, Principal Investigator"

contributors:
  - name: "Claude AI Assistant"
    role: "Development Support"

# Licensing
license:
  name: "GNU General Public License v3.0"
  spdx: "GPL-3.0-or-later"
  url: "https://www.gnu.org/licenses/gpl-3.0.html"

# Project Classification
subjects:
  - "Computer Science - Machine Learning"
  - "Computer Science - Artificial Intelligence"
  - "Computer Science - Computation and Language"
  - "Mathematics - Spectral Theory"
  - "Physics - Quantum Physics"

# Technical Specifications
technical:
  programming_language: "Python"
  python_version: ">=3.10"
  framework: "PyTorch"
  pytorch_version: ">=2.0.0"

  key_dependencies:
    - torch>=2.0.0
    - numpy>=1.24.0
    - scipy>=1.10.0
    - matplotlib>=3.7.0
    - pyyaml>=6.0
    - fastapi>=0.100.0

  hardware_requirements:
    minimum_ram: "8GB"
    recommended_ram: "16GB"
    gpu: "Optional but recommended (CUDA compatible)"
    storage: "2GB"

# Research Context
research_context:
  problem_addressed: "Integration of quaternionic algebra and spectral analysis in transformer architectures"
  methodology: "Theoretical framework combined with empirical validation"
  validation_methods:
    - "Energy conservation analysis"
    - "Parseval's theorem validation"
    - "Fractal consciousness metrics"
    - "Comparative benchmarking"

  innovations:
    - "Quaternion-based attention mechanism"
    - "Hierarchical harmonic gate system"
    - "Fractal consciousness processing"
    - "Energy-conserving transformations"

# Data and Resources
resources:
  datasets:
    output_format: "JSON, HDF5, Ψcws (proprietary)"
    sample_data: "examples/data/"
    validation_reports: "data/validation_reports/"

  documentation:
    api_docs: "docs/api/"
    user_guide: "docs/user_guide.md"
    theory_paper: "docs/TRANSFORMER_REFORMULATION_PLAN.md"

  models:
    architecture: "src/architecture/psiqrh_transformer.py"
    pretrained: "Not yet available"
    exportable_formats: ["PyTorch", "ONNX (planned)", "HuggingFace (planned)"]

# Interoperability Standards
standards:
  data_formats:
    - name: "JSON"
      version: "1.0"
      schema: "schemas/report_schema.json"
    - name: "HDF5"
      version: "1.14"
      usage: "Tensor storage (planned)"
    - name: "YAML"
      version: "1.2"
      usage: "Configuration files"

  ontologies:
    - name: "COGPO"
      url: "http://www.cogpo.org/ontologies/"
      usage: "Consciousness metrics terminology"

  apis:
    - name: "REST API"
      framework: "FastAPI"
      endpoint: "http://localhost:8000/api/v1"
      documentation: "http://localhost:8000/docs"

# Provenance and Versioning
provenance:
  created: "2024-01-01"
  last_modified: "2025-09-30"
  version_control: "Git"
  repository: "https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs"

  change_log:
    - version: "1.0.0"
      date: "2025-09-30"
      changes: "Initial FAIR-compliant release"

# Reproducibility
reproducibility:
  container: "Docker"
  dockerfile: "ops/docker/Dockerfile"
  requirements: "ops/requirements-docker.txt"

  execution_environment:
    os: "Linux (Ubuntu 22.04+) / MacOS / Windows with WSL2"
    containerization: "Docker, Docker Compose"

  seed_management: "Configurable via configs/qrh_config.yaml"
  deterministic: true

# Accessibility
access:
  public_repository: true
  open_source: true
  installation: |
    git clone https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs.git
    cd Reformulating-Transformers-for-LLMs
    pip install -e .

  api_access: "REST API available via Docker deployment"
  web_interface: "frontend_example.html"

# Citation
citation:
  bibtex: |
    @software{padilha2025psiqrh,
      author = {Padilha, Klenio Araujo},
      title = {{ΨQRH Transformer: Quaternionic-Harmonic Architecture for LLMs}},
      year = {2025},
      publisher = {Zenodo},
      doi = {10.5281/zenodo.17171112},
      url = {https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs}
    }

  apa: |
    Padilha, K. A. (2025). ΨQRH Transformer: Quaternionic-Harmonic Architecture
    for LLMs (Version 1.0.0) [Computer software]. Zenodo.
    https://doi.org/10.5281/zenodo.17171112

# Funding and Acknowledgments
funding:
  - source: "Self-funded"
    grant_number: "N/A"

acknowledgments: |
  This project was developed with assistance from Claude AI (Anthropic)
  for code implementation and documentation.

# Contact
contact:
  maintainer: "Klenio Araujo Padilha"
  email: "klenioaraujo@gmail.com"  # Replace with real email
  issues: "https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs/issues"
  discussions: "https://github.com/klenioaraujo/Reformulating-Transformers-for-LLMs/discussions"

# Compliance and Quality
quality_assurance:
  testing: "pytest framework"
  test_coverage: "examples/test_complete_psiqrh.py"
  validation_suite: "examples/*_test.py"

  code_quality:
    linting: "pylint, flake8"
    formatting: "black"
    type_checking: "mypy"

# FAIR Self-Assessment
fair_assessment:
  findable:
    - "✓ DOI assigned via Zenodo"
    - "✓ Structured metadata in metadata.yaml"
    - "✓ Keywords and subjects defined"
    - "✓ GitHub repository with descriptive README"

  accessible:
    - "✓ Public GitHub repository"
    - "✓ Open source license (GPL-3.0)"
    - "✓ Installation instructions provided"
    - "✓ Docker deployment available"
    - "✓ REST API for programmatic access"

  interoperable:
    - "✓ Standard data formats (JSON, YAML)"
    - "○ HDF5 support (planned)"
    - "○ ONNX export (planned)"
    - "○ HuggingFace integration (planned)"
    - "✓ JSON schema for validation"
    - "✓ REST API with OpenAPI documentation"

  reusable:
    - "✓ Clear GPL-3.0 license"
    - "✓ Comprehensive documentation"
    - "✓ Example usage scripts"
    - "✓ Provenance tracking"
    - "✓ Version control"
    - "○ PyPI distribution (planned)"

# Legend: ✓ = Implemented, ○ = Planned, ✗ = Not applicable